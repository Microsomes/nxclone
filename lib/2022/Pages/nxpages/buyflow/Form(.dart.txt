 Form(
                              child: Column(
                                children: [

                          for (var i = 0; i < formInputs.length; i++)

                                   Builder(builder: (ctx) {
                              if (formInputs[i]['type'] == "input") {
                                return NXInput(
                                  label: formInputs[i]['label'],
                                );
                              } else if(formInputs[i]['type'] == "terms"){
                                return Container(
                                  margin: EdgeInsets.only(top: 10),
                                  padding: EdgeInsets.only(left: 20),
                                  child: Text(formInputs[i]['label'],
                                  style: GoogleFonts.roboto(
                                    color: Color.fromRGBO(149, 84, 92, 1)
                                  ),
                                  ),
                                );
                              }
                              else if (formInputs[i]['type'] ==
                                  "checkboxcircle") {
                                return Container(
                                  margin: EdgeInsets.only(top: 10),
                                  child: Row(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    children: [
                                      Padding(
                                        padding: const EdgeInsets.only(left: 5),
                                        child: Transform.scale(
                                          scale: 1.4,
                                          child: Checkbox(
                                              fillColor: MaterialStateColor.resolveWith((states) => Color.fromRGBO(
                                                    42, 165, 0, 1),) ,
                                              side: MaterialStateBorderSide
                                                  .resolveWith(
                                                (states) => BorderSide(
                                                    width: 0.8,
                                                    color:  saveCard == true ? Colors.transparent : Colors.black),
                                              ),
                                              value: saveCard,
                                              shape: CircleBorder(),
                                              onChanged: (value) {
                                                setState(() {
                                                  saveCard = value;
                                                });
                                              },
                                            ),
                                          
                                        ),
                                      ),
                                      Expanded(
                                          child: Container(
                                        padding: EdgeInsets.only(top: 10),
                                        child: Column(
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            Text(
                                              formInputs[i]['label'],
                                              style: GoogleFonts.roboto(
                                                  fontWeight: FontWeight.w500,
                                                  fontSize: 16),
                                            ),
                                            Text(
                                              formInputs[i]['tip'],
                                              style: GoogleFonts.roboto(
                                                  fontSize: 14,
                                                  color: Colors.black
                                                      .withOpacity(0.5)),
                                            ),
                                          ],
                                        ),
                                      ))
                                    ],
                                  ),
                                );
                              } else if (formInputs[i]['type'] ==
                                  "inputwithtip") {
                                return Container(
                                  margin: EdgeInsets.only(top: 10),
                                  child: Column(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    children: [
                                      Padding(
                                        padding:
                                            const EdgeInsets.only(left: 20),
                                        child: Text(
                                          formInputs[i]['label'],
                                          style: GoogleFonts.roboto(
                                              fontWeight: FontWeight.bold,
                                              color:
                                                  Colors.black.withOpacity(0.8),
                                              fontSize: 16),
                                        ),
                                      ),
                                      Padding(
                                        padding:
                                            const EdgeInsets.only(left: 20),
                                        child: Text(
                                          formInputs[i]['tip'],
                                          style: GoogleFonts.roboto(
                                              color:
                                                  Colors.black.withOpacity(0.6),
                                              fontSize: 15),
                                        ),
                                      ),
                                      SizedBox(
                                        height: 10,
                                      ),
                                      Container(
                                        color: Colors.transparent,
                                        height: 50,
                                        margin: EdgeInsets.only(
                                            left: 20, right: 20),
                                        child: Container(
                                          height: 50,
                                          decoration: BoxDecoration(
                                              borderRadius:
                                                  BorderRadius.circular(5),
                                              border: Border.all()),
                                        ),
                                      )
                                    ],
                                  ),
                                );
                              } else if (formInputs[i]['type'] ==
                                  "inputwithinfo") {
                                return Container(
                                  margin: EdgeInsets.only(top: 10),
                                  child: Column(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    children: [
                                      Padding(
                                        padding:
                                            const EdgeInsets.only(left: 20),
                                        child: Text(
                                          formInputs[i]['label'],
                                          style: GoogleFonts.roboto(
                                              fontWeight: FontWeight.bold,
                                              color:
                                                  Colors.black.withOpacity(0.8),
                                              fontSize: 16),
                                        ),
                                      ),
                                      SizedBox(
                                        height: 10,
                                      ),
                                      Container(
                                        color: Colors.transparent,
                                        height: 50,
                                        margin: EdgeInsets.only(
                                            left: 20, right: 20),
                                        child: Row(
                                          children: [
                                            Container(
                                              height: 50,
                                              width: 150,
                                              decoration: BoxDecoration(
                                                  borderRadius:
                                                      BorderRadius.circular(10),
                                                  border: Border.all()),
                                            ),
                                            Container(
                                              width: 50,
                                              color: Colors.transparent,
                                              child: Center(
                                                child: Icon(Icons.info_outline),
                                              ),
                                            )
                                          ],
                                        ),
                                      )
                                    ],
                                  ),
                                );
                              } else {
                                return GestureDetector(
            onTap: (){
              // Navigator.push(context, MaterialPageRoute(builder: (ctx)=> BuyFlowPhase3()));
            },
            child: Container(
              alignment: Alignment.center,
                color: Colors.white,
                width: double.infinity,
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Container(
                      height:50,
                      margin: EdgeInsets.only(left: 25, right: 25,bottom: 20,top: 10),
                      decoration: BoxDecoration(
                          boxShadow: [
                            BoxShadow(
                              color: Color.fromRGBO(199, 199, 199, 1),
                              spreadRadius: 0,
                              blurRadius: 2,
                              offset: Offset(0, 3), // changes position of shadow
                            ),
                          ],
                          color: Color.fromRGBO(107,107,107,1),
                          borderRadius: BorderRadius.all(Radius.circular(10))),
                      child: Center(
                        child: Text(
                          formInputs[i]['label'],
                          style: GoogleFonts.roboto(
                            color: Colors.white,
                              fontWeight: FontWeight.bold, fontSize: 17),
                        ),
                      ),
                    ),
                    SizedBox(
                      height: 5,
                    ),
                   
                  ],
                ),
              ),
          );
                              }
                            })

                                ],
                              ),
                            ),